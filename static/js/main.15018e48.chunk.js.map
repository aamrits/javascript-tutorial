{"version":3,"sources":["components/Home.js","components/Navbar/Navbar.js","components/js-concepts/JSQuestionsBasic.js","components/js-concepts/JSQuestionsAdvanced.js","components/js-concepts/DeepShallowCopy.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Fragment","className","Component","Navbar","id","onClick","this","props","toggleBtn","react_router_dom","to","JSQuestionsBasic","Prism","highlightAll","JSQuestionsAdvanced","DeepShallowCopy","NotFound","App","document","querySelector","classList","toggle","components_Navbar_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15018e48.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Home Page</h1>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            This is the Home Page for my React Demo App. Check the sidebar to know all the functionality which I have done.\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"sidebar\">\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-light\">\n            <button className=\"close-btn\" onClick={ this.props.toggleBtn }><i className=\"fas fa-times\"></i></button>\n            <Link to=\"/\" className=\"navbar-brand\">Interview Q&As</Link>\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link to='/js-questions-basic'>Javascript Questions: Basics</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to='/js-questions-advanced'>Javascript Questions: Advanced</Link>\n              </li>                    \n            </ul>\n\n            <Link to=\"/\" className=\"navbar-brand\">Concepts</Link>\n            <ul className=\"navbar-nav\">            \n              <li className=\"nav-item\">\n                <Link to='/deep-shallow-copy'>Deep Copy & Shallow Copy</Link>\n              </li>\n            </ul>\n          </nav>\n          <footer>\n            <p>Copyright by Amrit &copy;2019</p>\n          </footer>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Prism from \"prismjs\";\n\nexport default class JSQuestionsBasic extends Component {\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <h1>Javascript Questions: Basic</h1>\n\n        <p>We are using the StackBlitz Generator to show you a ready-made, simple application that you can examine and play with interactively. In actual development you will typically.</p>\n\n        <div className=\"alert-is-helpful\">\n          <p>We are using the StackBlitz Generator to show you a ready-made, simple application that you can examine and play with interactively. In actual development you will typically.</p>\n        </div>\n\n        <div className=\"card callout-is-helpful\">\n          <div className=\"card-header\">\n            <p>Area Chart Example</p>\n          </div>\n          <div className=\"card-body\">\n            <p>We are using the StackBlitz Generator to show you a ready-made, simple application that you can examine and play with interactively. In actual development you will typically.</p>\n          </div>\n        </div>\n\n        <pre>\n          <code className=\"language-javascript\">\n          {`\n  onSubmit(e) {\n    e.preventDefault();\n    const job = {\n      title: 'Developer',\n      company: 'Facebook' \n    };\n  }\n          `}\n          </code>\n        </pre>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class JSQuestionsAdvanced extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Javascript Questions: Advanced</h1>\n\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">\n            <i className=\"fas fa-chart-area\"></i>\n            Area Chart Example</div>\n          <div className=\"card-body\">\n            \n          </div>\n          <div className=\"card-footer small text-muted\">Updated by Amrit</div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class DeepShallowCopy extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Deep Copy & Shallow Copy</h1>\n\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">\n            <i className=\"fas fa-chart-area\"></i>\n            Area Chart Example</div>\n          <div className=\"card-body\">\n            \n          </div>\n          <div className=\"card-footer small text-muted\">Updated by Amrit</div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <React.Fragment>\n            <h1>Not Found</h1>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport JSQuestionsBasic from './components/js-concepts/JSQuestionsBasic';\nimport JSQuestionsAdvanced from './components/js-concepts/JSQuestionsAdvanced';\nimport DeepShallowCopy from './components/js-concepts/DeepShallowCopy';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n  toggleBtn = () => {\n    document.querySelector('.wrapper').classList.toggle('active');\n  }\n  render() { \n    return (\n      <HashRouter>\n        <nav className=\"navbar navbar-light fixed-top navbar-header-styles\">\n          <Link to=\"/\" className=\"navbar-brand text-uppercase\">Javascript Tutorial</Link>\n          <div className=\"toggle-btn\" onClick={ this.toggleBtn }>\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </nav> \n        \n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"wrapper active\">\n              <Navbar toggleBtn= { this.toggleBtn } /> \n            </div>\n            <div className=\"page-wrap\">\n              <div className=\"container-fluid\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                  <Switch>\n                    <Route exact path=\"/\" component={ Home } />\n                    <Route path=\"/js-questions-basic\" component={ JSQuestionsBasic } />\n                    <Route path=\"/js-questions-advanced\" component={ JSQuestionsAdvanced } />\n                    <Route path=\"/deep-shallow-copy\" component={ DeepShallowCopy } />\n                    <Route path=\"*\" component={ NotFound } />\n                  </Switch>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'prismjs/themes/prism.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}